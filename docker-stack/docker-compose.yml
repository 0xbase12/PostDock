version: '3.7'

volumes:
  pg1:
    driver: local
  pg2:
    driver: local
  pg3:
    driver: local
  backup:
    driver: local

services:
  pg1:
    image: 0xbase12/postgis
    environment:
      NODE_ID: 1 # Integer number of node (not required if can be extracted from NODE_NAME var, e.g. node-45 => 1045)
      NODE_NAME: pg1 # Node name
      CLUSTER_NODE_NETWORK_NAME: pg1 # (default: hostname of the node)

      PARTNER_NODES: "pg1,pg2,pg3"
      REPLICATION_PRIMARY_HOST: pg1 # That should be ignored on the same node

      NODE_PRIORITY: 100  # (default: 100)
      SSH_ENABLE: 1
      #database we want to use for application
      POSTGRES_PASSWORD: monkey_db
      POSTGRES_USER: monkey_user
      POSTGRES_DB: monkey_db
      CLEAN_OVER_REWIND: 0
      CONFIGS_DELIMITER_SYMBOL: ;
      CONFIGS: "listen_addresses:'*';max_replication_slots:5"
      # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
      # used for pgpool.conf file
      #defaults:
      CLUSTER_NAME: pg_cluster # default is pg_cluster
      REPLICATION_DB: replication_db # default is replication_db
      REPLICATION_USER: replication_user # default is replication_user
      REPLICATION_PASSWORD: replication_pass # default is replication_pass
    volumes:
      - pg1:/var/lib/postgresql/data
      - ./ssh/:/ssh/keys
  
  pg2:
    image: 0xbase12/postgis
    environment:
      NODE_ID: 2
      NODE_NAME: pg2
      CLUSTER_NODE_NETWORK_NAME: pg2 # (default: hostname of the node)
      SSH_ENABLE: 1
      PARTNER_NODES: "pg1,pg2,pg3"
      REPLICATION_PRIMARY_HOST: pg1
      CLEAN_OVER_REWIND: 1
      CONFIGS_DELIMITER_SYMBOL: ;
      CONFIGS: "max_replication_slots:10" #some overrides
    volumes:
      - pg2:/var/lib/postgresql/data
      - ./ssh:/ssh/keys

  pg3:
    image: 0xbase12/postgis
    environment:
      NODE_ID: 3
      NODE_NAME: pg3
      CLUSTER_NODE_NETWORK_NAME: pg3 # (default: hostname of the node)
      SSH_ENABLE: 1
      PARTNER_NODES: "pg1,pg2,pg3"
      REPLICATION_PRIMARY_HOST: pg1
      CLEAN_OVER_REWIND: 1
      CONFIGS_DELIMITER_SYMBOL: ;
      CONFIGS: "max_replication_slots:10" #some overrides
    volumes:
      - pg3:/var/lib/postgresql/data
      - ./ssh:/ssh/keys

  backup:
    image: 0xbase12/barman
    environment:
      REPLICATION_USER: replication_user # default is replication_user
      REPLICATION_PASSWORD: replication_pass # default is replication_pass
      REPLICATION_HOST: pg1
      POSTGRES_PASSWORD: monkey_pass
      POSTGRES_USER: monkey_user
      POSTGRES_DB: monkey_db
      SSH_ENABLE: 1
      BACKUP_SCHEDULE: "*/30 */5 * * *"
    volumes:
      - backup:/var/backups
      - ./ssh:/ssh/keys
  
  pgpool:
          image: 0xbase12/pgpool:4.0.6.0
    environment:
      PCP_USER: pcp_user
      PCP_PASSWORD: pcp_pass
      WAIT_BACKEND_TIMEOUT: 60

      CHECK_USER: monkey_user
      CHECK_PASSWORD: monkey_pass
      CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy
      SSH_ENABLE: 1
      DB_USERS: monkey_user:monkey_pass # in format user:password[,user:password[...]]
      BACKENDS: "0:pg1:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pg2::::,2:pg3::::"
        # in format num:host:port:weight:data_directory:flag[,...]
      # defaults:
      #   port: 5432
      #   weight: 1
      #   data_directory: /var/lib/postgresql/data
      #   flag: ALLOW_TO_FAILOVER
      REQUIRE_MIN_BACKENDS: 3 # minimal number of backends to start pgpool (some might be unreachable)
      CONFIGS: "num_init_children:250,max_pool:4"
      # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
      # used for pgpool.conf file
    ports:
      - "5432:5432"
      - "9898:9898" # PCP
    volumes:
      - ./ssh:/ssh/keys

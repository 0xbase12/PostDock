apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: application-database-pgpool
  labels:
    name: database-balancer
    node: pgpool
    system: application
spec:
  replicas: 2
  template:
    metadata:
      name: database-pgpool
      labels:
        name: database-balancer
        node: pgpool
        system: application
    spec:
      containers:
      - name: database-pgpool
        image: paunin/postgresql-cluster-pgpool
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command: ['bash', '-c', '/usr/local/bin/pgpool/has_write_node.sh && /usr/local/bin/pgpool/has_enough_backends.sh']
          initialDelaySeconds: 600
          timeoutSeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        ports:
          - containerPort: 5432
        env:
          # pcp
          - name: "PCP_USER"
            valueFrom:
              secretKeyRef:
                name: application-secret
                key: app.db.pool.pcp.user
          - name: "PCP_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: application-secret
                key: app.db.pool.pcp.password

          # Cluster configs  to hearbit checks
          - name: "CHECK_USER"
            valueFrom:
              secretKeyRef:
                name: application-secret
                key: app.db.cluster.replication.user
          - name: "CHECK_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: application-secret
                key: app.db.cluster.replication.password
          - name: "DB_USERS"
            valueFrom:
              secretKeyRef:
                name: application-secret
                key: app.db.pool.users
          - name: "BACKENDS"
            valueFrom:
              configMapKeyRef:
                name: application-config
                key: app.db.pool.backends